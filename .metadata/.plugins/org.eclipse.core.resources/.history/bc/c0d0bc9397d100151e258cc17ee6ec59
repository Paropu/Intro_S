import java.io.DataOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.Writer;
import java.net.Socket;
import java.util.Calendar;

public class HiloCliente implements Runnable {
Socket socket;

	/*@Override
	public void run() {
		OutputStream aux;
		try {
			aux = this.socket.getOutputStream();
			DataOutputStream flujo =new DataOutputStream(aux);
			flujo.writeUTF("");
			for(;;){
					Calendar calendario = Calendar.getInstance();
					int hora =calendario.get(Calendar.HOUR_OF_DAY);
					int minutos = calendario.get(Calendar.MINUTE);
					int segundos = calendario.get(Calendar.SECOND);
					flujo.writeUTF("\t" + hora + ":" + minutos + ":" + segundos);
					Thread.sleep (1000);		
			}
		} catch (IOException e){
			try {
				this.socket.close();
			} catch (IOException e1) {
				e1.printStackTrace();
			}
			System.out.println("\n\t>>> Cliente ha abandonado el servidor:\n\t\tIP: "+socket.getRemoteSocketAddress());
		}
		catch (InterruptedException e) {
			e.printStackTrace();
		}
	}*/
@Override
public void run() {
	OutputStream aux;
	try {
		aux = this.socket.getOutputStream();
		PrintWriter flujoSalida = new PrintWriter(this.socket.getOutputStream(), true);
	flujoSalida.print("-----");
		System.out.println();
		for(;;){
			System.out.println("for");
				Calendar calendario = Calendar.getInstance();
				int hora =calendario.get(Calendar.HOUR_OF_DAY);
				int minutos = calendario.get(Calendar.MINUTE);
				int segundos = calendario.get(Calendar.SECOND);
				flujoSalida.println("\t" + hora + ":" + minutos + ":" + segundos);
				Thread.sleep (1000);		
		}
	} catch (IOException e){
		try {
			this.socket.close();
		} catch (IOException e1) {
			e1.printStackTrace();
		}
		System.out.println("\n\t>>> Cliente ha abandonado el servidor:\n\t\tIP: "+socket.getRemoteSocketAddress());
	}
	catch (InterruptedException e) {
		e.printStackTrace();
	}
}

	public Socket getSocket() {
		return socket;
	}
	public void setSocket(Socket socket) {
		this.socket = socket;
	}

	public HiloCliente(Socket socket) {
		super();
		this.socket = socket;
	}
}
