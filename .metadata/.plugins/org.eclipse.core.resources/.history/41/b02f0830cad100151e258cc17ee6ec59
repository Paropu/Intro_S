import java.io.*;
import java.net.*;

public class Cliente {
	public Cliente(InetAddress dirIP, Integer puerto){
		
		try{
			System.out.println("\n\n\t|-----------------------------------<[  CLIENTE  ]>-----------------------------------|");
			System.out.println("\n\n\t\t>>> IP Local: "+InetAddress.getLocalHost());
		System.out.println("\n\t\t>>> Conectando al servidor... :\n\t\t\tIP: "+dirIP+"\n\t\t\tPuerto: "+puerto);
		//Thread.sleep (1000);
			Socket socketCliente = new Socket (dirIP, puerto);	
			new Shutdown(socketCliente).prevenirApagado();
			BufferedReader flujoEntrada = new BufferedReader (new InputStreamReader(socketCliente.getInputStream()));
			System.out.println("\n\t\t>>> ConexiÃ³n realizada correctamente.");
			System.out.println("\n\t\t>>> Recibiendo servicio:\n");
			for(;;){
				System.out.println("\t\t"+flujoEntrada.readLine());
				Thread.sleep (1000);
			}
			
		} catch(Exception e) {
			System.out.println("\n\t\t>>> ERROR: Imposible conectar al servidor indicado.\n" );
			System.out.println("\t\t>>> Cliente apagado.\n\n");
			System.out.println("\t|-------------------------------------------------------------------------------------|\n\n");

		}
	}
	public class Shutdown {
		Socket socketCliente;
		public void prevenirApagado(){
			Runtime.getRuntime().addShutdownHook(new Thread(){
				@Override
				public void run(){	
					System.out.println("\n\t\t>>> Desconectando del servidor...\n");
					try {
						socketCliente.close();
					} catch (IOException e) {
						e.printStackTrace();
					}
					try {
						Thread.sleep (1000);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					System.out.println("\t\t>>> Cliente apagado.\n\n");
					System.out.println("\t|-------------------------------------------------------------------------------------|\n\n");
				}
			});
		}
		public Shutdown(Socket socketCliente) {
			super();
			this.socketCliente = socketCliente;
		}
		
	}
}


/*
	BufferedReader flujoEntrada = new BufferedReader (new InputStreamReader(socketCliente.getInputStream()));
	System.out.println(flujoEntrada.readLine());
 */